Introduction to Javascrpit 



    What Is Javascrpit? - Programming language , 1997, ES6 version, interactions, light wieght, 


    Is Object Oriented Programming, Scripting Language : Ans Both


    Why Javascrpit is THE MOST LOVED LANGUAGE & THE MOST HATED LANGUAGE.
    hated :  lot of lines , 
    Liked : simple and easly to understand and write in javscript , 


    Remberer[Hosted] : When react, lets you debug some write you would see a lot of code that not written, and might be comming from other frameworks or library.



    History Of Javascrpit
    1997, Brendan Eich( From the Days of Netscape ) ,  
    ECMA Script, ECMA is desciding body of mainting standard of JS 
    June 2009 ES - 5, 
    Rigth Now ES - 6  

    [Point to Note] -> Javascript ( JS ) and JAVA Are two different programming language.


    Where Can I utilize Javascript
        Browser Games
        Web Application, Web Sites, Web Presentation 
        Mobile Applicaiton, 
        Server Side Scripting
        etc



    How to run Javascript Class.
        Node Run TIme environment, 
        For Our Development Purpose , Chrome Browser



20 September 2022

Three Ways of Writing javscript code in html 
    1. Inline 2. Js File 3. Creating Script Tag in the HTML Document


Keywords : Reserved Words in Javascript 

Variable and Declaration

    we can use : var, const , let | To store Primitve Data Type : Number , string , Boolean ,
    const ( variable name defined with const connect take be changed once its defined )
    var and let ( variable names defined here can be modified to take up different types of data say strings or number or Boolean )
    

    Difference Between Null And Undefined 
    Undefined : This is seen when a variable name is defined and not assigned with any value to it 
    Null : This is a manual assignment , wherein the type of data is null


Operators In Javascript

    assignment ( = )

    ASSIGNMENET TOPIC ------>    Arithemetic Operators (  + , - , / , * , % ) 

    Conditional Operators ( < , > , <= , >= , !=, == , === , !== )

    Unary Operators ( ++ , -- )

    Logical Operators ( && , || )

    Ternary Operators ( ? : ) - Also Inline If conditiona
        true ? console.log("This is Fine") : console.log("Failed Script");
        VM2312:1 This is Fine
        undefined
        false ? console.log("This is Fine") : console.log("Failed Script");
        VM2385:1 Failed Script
        undefined




21 September 2022


    Today's topic to learn Conditional Statements( if, if else, if else if , for , while , do while , switch )



22 September 2022

    Strings -> Why strings are immutable,  few strings methods like tolower(), toUpper(), length() , indexOf(), slice(), repalce() , escape characters, string literals,    
                Performing string addition + , - , / 

    Math Object in Javascript

    two general methods parseInt and typeOf 


    Objects -> 
            How to create object 
            add properties to an object
            access properties using dot and [] notation
            nested object



23 September 2022
    Revised on the objects bracket notation,
    for / in and for / of loops basic usecase like one would be used in the iteration of objects and other iteration of array


    Arrys ->
            How to create an array
            is arrays reference type ( arrays and object which have some properties or methods ) or primitive type( data no properties or methods ).
            push pop, slice shift unshift reverse, sort splice  join . concat ,  


24 September 2022

    What is function / methods in javscript
        -> A set of statements that performs a task or calculates a values

    How to write a function in JS 
    Function arguments 
    return values in function
    function along with objects

    // this Keywords in javascript, reference to the object that is beeing called or excution context
    this is in object

    anonymous function in javascript



25 September 2022

    In Function, What are callbacks methods or functions

    Class. 
        How to define a Class
        Constructor method 
        methods in class, 
        Inheritence in class with using super Keyword
        how this to provide access for sub methds in class using  this.argum1 = argum1 in Constructor method 



26 September 2022

    Scopes & Block & GLobal Scrope in javascript


    Hoisting In Javascript
        // Hoisting is about the wirtitng the varibale / declaring the variable above the functino experession , and can accessed in any of the scopes under its defination.


    Closures in Javscript 
        combination of function bundled together with reference to its surrounding states, 

        inner function getting access to the varibles scoped outside the function


    DOM manipulation in Javascript
        
        javascript selector
        getElementById, getElementsByTagName, getElementsByClassName, querySelector, querySelectorAll,

        modifyign/adding/removing the html elments 

        events ( click, doubleclick , keyup, keydown, mouse hover, focus, mouse enter / leave, scroll , . . . )

        event Listerners ( )





27 September 2022

    Created the TODO application using DOM manipulation in javscript.


28 September 2022

    Use the below test 
    https://api.publicapis.org/entries?title=bu&description=dip


    Four states in the xml http request object
                request not initialezed
                server connection established
                request received
                processing request 
                request finished and response is ready 

    var xhttp = new XMLHttpRequest();
    xhttp.onreadystatechange = function() {
        if (this.readyState == 4 && this.status == 200) {
        document.getElementById("demo").innerHTML =
        this.responseText;
        }
    };
    xhttp.open("GET", "xmlhttp_info.txt", true);
    xhttp.send();



'click' , loadData 

function loadData(event) {
    var xhttp = new XMLHttpRequest();
    xhr.open('get', 'https://api.publicapis.org/entries?', true);
    xhr.onload = function () {
        if(this.state === 200) {
            log(this.responseText);
        }
    }
    xhr.send();
}



fetch(url).then( res => res.json() ).then( data => clg(data)).catch(err => clg(err));



const response = await fetch(uel);

const data = await response.json();

clg(data);



